// Code generated by protoc-gen-go. DO NOT EDIT.
// source: journey.proto

/*
Package journey is a generated protocol buffer package.

It is generated from these files:
	journey.proto

It has these top-level messages:
	CSS
	JS
	Version
	Journey
	DependencyAssets
*/
package journey

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CSS struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *CSS) Reset()                    { *m = CSS{} }
func (m *CSS) String() string            { return proto.CompactTextString(m) }
func (*CSS) ProtoMessage()               {}
func (*CSS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CSS) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type JS struct {
	Url    string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	RootID string `protobuf:"bytes,2,opt,name=rootID" json:"rootID,omitempty"`
}

func (m *JS) Reset()                    { *m = JS{} }
func (m *JS) String() string            { return proto.CompactTextString(m) }
func (*JS) ProtoMessage()               {}
func (*JS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JS) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *JS) GetRootID() string {
	if m != nil {
		return m.RootID
	}
	return ""
}

type Version struct {
	Css []*CSS `protobuf:"bytes,1,rep,name=css" json:"css,omitempty"`
	Js  []*JS  `protobuf:"bytes,2,rep,name=js" json:"js,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Version) GetCss() []*CSS {
	if m != nil {
		return m.Css
	}
	return nil
}

func (m *Version) GetJs() []*JS {
	if m != nil {
		return m.Js
	}
	return nil
}

type Journey struct {
	Name         string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version      string            `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Dependencies map[string]string `protobuf:"bytes,3,rep,name=dependencies" json:"dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Journey) Reset()                    { *m = Journey{} }
func (m *Journey) String() string            { return proto.CompactTextString(m) }
func (*Journey) ProtoMessage()               {}
func (*Journey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Journey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Journey) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Journey) GetDependencies() map[string]string {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type DependencyAssets struct {
	Versions []*Version `protobuf:"bytes,1,rep,name=versions" json:"versions,omitempty"`
}

func (m *DependencyAssets) Reset()                    { *m = DependencyAssets{} }
func (m *DependencyAssets) String() string            { return proto.CompactTextString(m) }
func (*DependencyAssets) ProtoMessage()               {}
func (*DependencyAssets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DependencyAssets) GetVersions() []*Version {
	if m != nil {
		return m.Versions
	}
	return nil
}

func init() {
	proto.RegisterType((*CSS)(nil), "journey.CSS")
	proto.RegisterType((*JS)(nil), "journey.JS")
	proto.RegisterType((*Version)(nil), "journey.Version")
	proto.RegisterType((*Journey)(nil), "journey.Journey")
	proto.RegisterType((*DependencyAssets)(nil), "journey.DependencyAssets")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Explorer service

type ExplorerClient interface {
	GetDependencies(ctx context.Context, in *Journey, opts ...grpc.CallOption) (*DependencyAssets, error)
}

type explorerClient struct {
	cc *grpc.ClientConn
}

func NewExplorerClient(cc *grpc.ClientConn) ExplorerClient {
	return &explorerClient{cc}
}

func (c *explorerClient) GetDependencies(ctx context.Context, in *Journey, opts ...grpc.CallOption) (*DependencyAssets, error) {
	out := new(DependencyAssets)
	err := grpc.Invoke(ctx, "/journey.Explorer/GetDependencies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Explorer service

type ExplorerServer interface {
	GetDependencies(context.Context, *Journey) (*DependencyAssets, error)
}

func RegisterExplorerServer(s *grpc.Server, srv ExplorerServer) {
	s.RegisterService(&_Explorer_serviceDesc, srv)
}

func _Explorer_GetDependencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Journey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExplorerServer).GetDependencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/journey.Explorer/GetDependencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExplorerServer).GetDependencies(ctx, req.(*Journey))
	}
	return interceptor(ctx, in, info, handler)
}

var _Explorer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "journey.Explorer",
	HandlerType: (*ExplorerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDependencies",
			Handler:    _Explorer_GetDependencies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "journey.proto",
}

func init() { proto.RegisterFile("journey.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4f, 0xc2, 0x40,
	0x14, 0xb4, 0x5b, 0xa5, 0xf8, 0xc0, 0x58, 0x5f, 0x8c, 0xae, 0x98, 0x18, 0xb2, 0x27, 0x0e, 0x86,
	0x03, 0x5e, 0x8c, 0x17, 0x31, 0x7c, 0x18, 0x89, 0xa7, 0x36, 0xf1, 0x8e, 0xf0, 0x0e, 0x40, 0xdd,
	0x6d, 0x76, 0x5b, 0x62, 0xff, 0x9d, 0x3f, 0xcd, 0xb4, 0xdd, 0x56, 0x44, 0x4f, 0x7d, 0x33, 0x6f,
	0xba, 0x33, 0x3b, 0x0b, 0x27, 0x6b, 0x95, 0x6a, 0x49, 0x59, 0x3f, 0xd6, 0x2a, 0x51, 0xe8, 0x59,
	0x28, 0x2e, 0xc1, 0x1d, 0x85, 0x21, 0xfa, 0xe0, 0xa6, 0x3a, 0xe2, 0x4e, 0xd7, 0xe9, 0x1d, 0x07,
	0xf9, 0x28, 0xfa, 0xc0, 0x66, 0xff, 0xf0, 0x78, 0x01, 0x0d, 0xad, 0x54, 0xf2, 0x32, 0xe6, 0xac,
	0x20, 0x2d, 0x12, 0x53, 0xf0, 0xde, 0x48, 0x9b, 0x95, 0x92, 0x78, 0x03, 0xee, 0xc2, 0x18, 0xee,
	0x74, 0xdd, 0x5e, 0x6b, 0xd0, 0xee, 0x57, 0xce, 0xa3, 0x30, 0x0c, 0xf2, 0x05, 0x5e, 0x03, 0x5b,
	0x1b, 0xce, 0x8a, 0x75, 0xab, 0x5e, 0xcf, 0xc2, 0x80, 0xad, 0x8d, 0xf8, 0x72, 0xc0, 0x9b, 0x95,
	0x14, 0x22, 0x1c, 0xca, 0xf9, 0x07, 0x59, 0xfb, 0x62, 0x46, 0x0e, 0xde, 0xb6, 0xf4, 0xb1, 0x01,
	0x2a, 0x88, 0x53, 0x68, 0x2f, 0x29, 0x26, 0xb9, 0x24, 0xb9, 0x58, 0x91, 0xe1, 0x6e, 0x61, 0x20,
	0x7e, 0x0c, 0xec, 0x77, 0xbc, 0x23, 0x9a, 0xc8, 0x44, 0x67, 0xc1, 0xaf, 0xff, 0x3a, 0x8f, 0x70,
	0xf6, 0x47, 0x92, 0x17, 0xb1, 0xa1, 0xac, 0x2a, 0x62, 0x43, 0x19, 0x9e, 0xc3, 0xd1, 0x76, 0x1e,
	0xa5, 0x64, 0x63, 0x94, 0xe0, 0x81, 0xdd, 0x3b, 0x62, 0x08, 0x7e, 0x7d, 0x40, 0xf6, 0x64, 0x0c,
	0x25, 0x06, 0x6f, 0xa1, 0x69, 0x73, 0x56, 0xc5, 0xf8, 0x75, 0x30, 0xdb, 0x5b, 0x50, 0x2b, 0x06,
	0xaf, 0xd0, 0x9c, 0x7c, 0xc6, 0x91, 0xd2, 0xa4, 0x71, 0x08, 0xa7, 0xcf, 0x94, 0xec, 0x26, 0x42,
	0x7f, 0xff, 0x4e, 0x9d, 0xab, 0x9a, 0xd9, 0x77, 0x16, 0x07, 0xef, 0x8d, 0xe2, 0xcd, 0xef, 0xbe,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x7f, 0xca, 0xc0, 0x04, 0x02, 0x00, 0x00,
}
